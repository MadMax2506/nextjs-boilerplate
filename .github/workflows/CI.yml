name: CI

on: [workflow_call]

env:
  NODE_ENV: dev
  NODE_OPTIONS: "--max_old_space_size=4096"

jobs:
  install:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [ 20.x ]
    outputs:
      os: ${{ matrix.os }}
      node-version: ${{ matrix.node-version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm install --no-frozen-lockfile
  tsc:
    needs: install
    runs-on: ${{ needs.install.outputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4.1.0
        with:
          path: .pnpm-store
          key: "${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}"
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm type:check
  lint:
    needs: install
    runs-on: ${{ needs.install.outputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4.1.0
        with:
          path: .pnpm-store
          key: "${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}"
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm lint:check
  format:
    needs: install
    runs-on: ${{ needs.install.outputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4.1.0
        with:
          path: .pnpm-store
          key: "${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}"
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm format:check
  build:
    needs: ["install", "tsc", "lint", "format"]
    runs-on: ${{ needs.install.outputs.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4.1.0
        with:
          path: .pnpm-store
          key: "${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}"
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm install --no-frozen-lockfile
      - run: pnpm build
